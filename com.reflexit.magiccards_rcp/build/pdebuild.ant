<project>
	<property file="${basedir}/build.properties" />
	<property name="ma.version" value="${buildId}" />
	<property name="export.dir" value="${buildDirectory}/../export" />
	<property name="orig.workspace.root" value="${basedir}/../.." />
	<pathconvert property="equinox.launcher.jar">
		<first count="1">
			<sort>
				<fileset dir="${baseLocation}/plugins" includes="**/org.eclipse.equinox.launcher_*.jar" />
				<reverse xmlns="antlib:org.apache.tools.ant.types.resources.comparators">
					<date />
				</reverse>
			</sort>
		</first>
	</pathconvert>
	<property name="repack.dir" value="${buildDirectory}/${buildLabel}-install" />
    <property name="ainstaller" value="C:/Program Files (x86)/Caphyon/Advanced Installer 11.1/bin/x86/AdvancedInstaller.com"/>
	<property name="msiout" value="${buildDirectory}/../installer/magicassistant-SetupFiles"/>
	<!-- 
	Create a self extracting archive using 7zip
	c:\Develop\magic\export\1.2.6.7>"c:\Program Files\7-Zip\7z.exe" a -t7z -mx5 -sfx7z.sfx archive.exe MagicAssistant
	-->


	<target name="copy.jre">
		<sync todir="${repack.dir}/${archivePrefix}/jre" includeEmptyDirs="true" overwrite="true">
			<!--fileset dir="C:/Program Files (x86)/Java/jre7_x32"-->
			<fileset dir="C:/Program Files/Java/jre7">
			</fileset>
		</sync>
	</target>

	<target name="install">
		<unzip src="${buildDirectory}/${buildLabel}/magicassistant-${buildId}-win32.win32.x86_64.zip" dest="${repack.dir}" />
	</target>

	<target name="install.copy" depends="install, copy.jre">

		<!-- <delete dir="${buildDirectory}/install"/> -->
		<sync todir="${buildDirectory}/install"  includeEmptyDirs="true" overwrite="true">
			<fileset dir="${repack.dir}">
			</fileset>
		</sync>
	</target>

	<target name="pack.jre" depends="install, copy.jre">
		<delete dir="data"/>
		<!-- <zip destfile="${buildDirectory}/${buildLabel}/magicassistant-${buildId}-win32.win32.x86.zip" update="true">
			<zipfileset dir="C:/Program Files (x86)/Java/jre7_u21_x32" prefix="MagicAssistant/jre" />
		</zip>
		-->

		<antcall target="7z">
			<param name="destination" value="${buildDirectory}/${buildLabel}/magicassistant-intaller-${buildId}-win32.exe" />
			<param name="dir" value="${repack.dir}" />
		</antcall>
	</target>

	<target name="msi" depends="install.copy">
		<exec executable="${ainstaller}">
			<arg line="/edit ${msiout}/../magicassistant.aip /SetVersion ${ma.version}" />
		</exec>
		<exec executable="${ainstaller}">
			<env key="EXPORT_DIR" file="${buildDirectory}/install"/>
			<arg line="/execute ${msiout}/../magicassistant.aip ${msiout}/../reimport.aic" />
		</exec>
		<exec executable="${ainstaller}">
			<arg line="/build ${msiout}/../magicassistant.aip" />
		</exec>
		<copy todir="${buildDirectory}/${buildLabel}"  includeEmptyDirs="true" overwrite="true">
				<fileset dir="${msiout}">
					<include name="*${ma.version}*.msi"/>
				</fileset>
		</copy>
	</target>
	<target name="7z">
		<!-- 7z.exe a -t7z -mx5 -sfx7z.sfx $RESULT/magicassistant-intaller-$RELEASE-win32.exe MagicAssistant -->
		<exec executable="C:/Program Files/7-Zip/7z.exe" dir="${dir}">
			<arg value="a" />
			<arg value="-t7z" />
			<arg value="-mx5" />
			<arg value="-sfx7z.sfx" />
			<arg value="${destination}" />
			<arg value="${archivePrefix}" />
		</exec>
	</target>

	<target name="run" depends="install,copy.jre">
		<exec executable="${repack.dir}/${archivePrefix}/magicassistant.exe" dir="${repack.dir}/${archivePrefix}">
			<arg value="-data" />
			<arg value="data" />
		</exec>
	</target>

	<target name="clean">
		<echo message="Deleting ${buildDirectory}" />
		<delete dir=" ${buildDirectory}" failonerror="false" verbose="on">
		</delete>
	</target>

	<target name="sync.files">
		<echo message="Sync ${orig.workspace.root} -> ${buildDirectory}" />
		<sync todir="${buildDirectory}/plugins" includeEmptyDirs="true" overwrite="true">
			<fileset dir="${orig.workspace.root}">
				<include name="com.reflexit.magic*/**" />
				<include name="com.reflexit.mtg*/**" />
				<exclude name="*feature/**" />
				<exclude name="*tests/**" />
				<exclude name="*test/**" />
				<exclude name="*feature.rcp/**" />
			</fileset>
		</sync>
		<sync todir="${buildDirectory}/features" includeEmptyDirs="true" overwrite="true">
			<fileset dir="${orig.workspace.root}">
				<include name="*feature/**" />
				<include name="*feature.rcp/**" />
			</fileset>
		</sync>
	</target>

	<target name="fix.about">
		<echo message="Fixing build qualifiers in ${buildDirectory}/plugins" />

		<!-- Replace the build qualifier token in about.properties . -->
		<replace file="${buildDirectory}/plugins/com.reflexit.magiccards_rcp/plugin.xml" token="xxxxxxxx" value="${ma.version}" />
		<replace file="${buildDirectory}/plugins/com.reflexit.magiccards.ui/about.properties" token="xxxxxxxx" value="${ma.version}" />
		<replace file="${buildDirectory}/plugins/com.reflexit.mtgtournament.ui/about.properties" token="xxxxxxxx" value="${ma.version}" />

		<!-- Add change log into update description -->
		<loadfile property="changeLog"   srcFile="${buildDirectory}/plugins/com.reflexit.magiccards_rcp/build/changelog.txt">
			<filterchain>
				<suffixlines suffix="\n"/>
				<striplinebreaks />
			</filterchain>
		</loadfile>
		<replace file="${buildDirectory}/plugins/com.reflexit.magiccards_rcp/p2.inf" token="$version$" value="${ma.version}" />
		<replace file="${buildDirectory}/plugins/com.reflexit.magiccards_rcp/p2.inf" token="$ChangeLog$" value="${changeLog}" />
	</target>
	<target name="fix.qual">
		<propertyfile file="${basedir}/build.properties">
			<entry key="qual" type="int" default="0" operation="+" />
		</propertyfile>
	</target>
	<target name="build.product" depends="sync.files,fix.about">
		<delete dir="${buildDirectory}/buildRepo"/>
		<delete dir="${buildDirectory}/p2repo"/>
		<echo message="Launcher ${equinox.launcher.jar}" />
		<java jar="${equinox.launcher.jar}" fork="true" failonerror="true">
			<arg value="-application" />
			<arg value="org.eclipse.ant.core.antRunner" />
			<arg value="-consoleLog" />
			<arg value="-buildfile" />
			<arg value="${eclipse.pdebuild.scripts}/productBuild/productBuild.xml" />
			<arg value="-Dbuilder=${buildDirectory}/plugins/com.reflexit.magiccards_rcp/build" />
			<arg value="-Dqual=${qual}" />
			<arg value="-Dconfigs=${configs}" />
			<!-- jvmarg value="-agentlib:jdwp=transport=dt_socket,address=8000,server=y,suspend=y"/ -->
		</java>
	</target>

	<target name="echo.properties">
		<echoproperties />
	</target>
	<target name="export.update.site">
		<sync todir="${export.dir}/update/1.2" includeEmptyDirs="true" overwrite="true">
			<fileset dir="${buildDirectory}/p2repo">
			</fileset>
		</sync>
	</target>
	<target name="publish.update.site">
		<scp verbose="true"
			todir="elaskavaia,mtgbrowser@web.sourceforge.net:htdocs/update/1.2" 
			keyfile="C:/Develop/magic/.ssh/id_rsa" trust="true">
			<fileset dir="${export.dir}/update/1.2">
				<!-- <include name="**/com.reflexit**"/>
				<include name="*.xml"/>-->
			</fileset>
		</scp>
	</target>
	<target name="publish.update.site.beta">
		<scp verbose="true"
			todir="elaskavaia,mtgbrowser@web.sourceforge.net:htdocs/update/1.2-beta" 
			keyfile="C:/Develop/magic/.ssh/id_rsa" trust="true">
			<fileset dir="${export.dir}/update/1.2">
			    <include name="**/com.reflexit**"/>
				<include name="*.xml"/> 

			</fileset>
		</scp>
	</target>
	<target name="publish.docs">
		<scp verbose="true"
			todir="elaskavaia,mtgbrowser@web.sourceforge.net:htdocs/doc-plugins" 
			keyfile="C:/Develop/magic/.ssh/id_rsa" trust="true">
			<fileset dir="${orig.workspace.root}">
				<include name="com.reflexit.magiccards.help/**"/>
			</fileset>
		</scp>
	</target>
	<target name="publish.release">
		<scp verbose="true"
			todir="elaskavaia,mtgbrowser@web.sourceforge.net:/home/frs/project/m/mt/mtgbrowser/Magic_Assistant/" 
			keyfile="C:/Develop/magic/.ssh/id_rsa" trust="true">
			<fileset dir="${export.dir}">
				<include name="${ma.version}/**"/>
			</fileset>
		</scp>
	</target>
	<target name="export.release">
		<sync todir="${export.dir}/${ma.version}">
			<fileset dir="${buildDirectory}/${buildLabel}" >
				<exclude name="**/compilelogs/**"/>
			</fileset>
		</sync>
	</target>
</project>